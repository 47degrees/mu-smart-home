{% set k8s_endpoints = {
      '': 'api/v1',
      '-apps': 'apis/apps/v1',
      '-rbac': 'apis/rbac.authorization.k8s.io/v1',
      '-v1beta1-extensions': 'apis/extensions/v1beta1'
} %}

resources:
- name: {{ env['name'] }}
  type: container.v1.cluster
  properties:
    zone: {{ properties['zones'][0] }}
    cluster:
      description: {{ properties['description'] }}
      initialClusterVersion: '1.12.7-gke.10'
      locations: {{ properties['zones'] }}
      nodePools:
      - name: {{ env['name'] }}-pool
        initialNodeCount: {{ properties['initialNodeCount'] | default(1) }}
        config:
          machineType: {{ properties['machineType'] | default('n1-standard-1') }}
          oauthScopes:
          - https://www.googleapis.com/auth/compute
          - https://www.googleapis.com/auth/devstorage.read_only
          - https://www.googleapis.com/auth/logging.write
          - https://www.googleapis.com/auth/monitoring
        management:
          autoUpgrade: true
          autoRepair: true

{% for typeSuffix, endpoint in k8s_endpoints.iteritems() %}
- name: {{ env['name'] }}-type{{ typeSuffix }}
  type: deploymentmanager.v2beta.typeProvider
  properties:
    options:
      validationOptions:
        # Kubernetes API accepts ints, in fields they annotate with string.
        # This validation will show as warning rather than failure for
        # Deployment Manager.
        # https://github.com/kubernetes/kubernetes/issues/2971
        schemaValidation: IGNORE_WITH_WARNINGS
      # According to kubernetes spec, the path parameter 'name'
      # should be the value inside the metadata field
      # https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md
      # This mapping specifies that
      inputMappings:
      - fieldName: name
        location: PATH
        methodMatch: ^(GET|DELETE|PUT)$
        value: $.ifNull($.resource.properties.metadata.name, $.resource.name)
      - fieldName: metadata.name
        location: BODY
        methodMatch: ^(PUT|POST)$
        value: $.ifNull($.resource.properties.metadata.name, $.resource.name)
      - fieldName: Authorization
        location: HEADER
        value: >
          $.concat("Bearer ", $.googleOauth2AccessToken())
    descriptorUrl: https://$(ref.{{ env['name'] }}.endpoint)/swaggerapi/{{ endpoint }}
{% endfor %}

outputs:
{% for typeSuffix, endpoint in k8s_endpoints.iteritems() %}
- name: clusterType{{ typeSuffix }}
  value: {{ env['name'] }}-type{{ typeSuffix }}
{% endfor %}
